{
  "timestamp": "2025-06-12T16:19:42.195439",
  "status_code": 200,
  "headers": {
    "Date": "Thu, 12 Jun 2025 14:19:01 GMT",
    "Content-Type": "application/json",
    "Transfer-Encoding": "chunked",
    "Connection": "keep-alive",
    "Content-Encoding": "gzip",
    "Access-Control-Allow-Origin": "*",
    "X-Clerk-Auth-Message": "Invalid JWT form. A JWT consists of three parts separated by dots. (reason=token-invalid, token-carrier=header)",
    "X-Clerk-Auth-Reason": "token-invalid",
    "X-Clerk-Auth-Status": "signed-out",
    "Vary": "Accept-Encoding",
    "Server": "cloudflare",
    "Cf-Ray": "94e9fb0ef90a6e75-PRG"
  },
  "text": "\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n\n         \n{\"id\":\"resp_684ae1d4a96c8190a8563ead0d67c5c3\",\"provider\":\"OpenAI\",\"model\":\"openai/o4-mini-high\",\"object\":\"chat.completion\",\"created\":1749737940,\"choices\":[{\"logprobs\":null,\"finish_reason\":\"stop\",\"native_finish_reason\":\"stop\",\"index\":0,\"message\":{\"role\":\"assistant\",\"content\":\"[\\n    {\\n        \\\"title\\\": \\\"Length Property for Strings and Lists\\\",\\n        \\\"start_time\\\": \\\"00:50:50\\\",\\n        \\\"subsections\\\": [\\n            {\\n                \\\"title\\\": \\\"String length property shows character count\\\",\\n                \\\"start_time\\\": \\\"00:50:52\\\",\\n                \\\"subsections\\\": []\\n            },\\n            {\\n                \\\"title\\\": \\\"List length shows number of podcast exchanges\\\",\\n                \\\"start_time\\\": \\\"00:51:06\\\",\\n                \\\"subsections\\\": []\\n            }\\n        ]\\n    },\\n    {\\n        \\\"title\\\": \\\"Formatting tools.script data\\\",\\n        \\\"start_time\\\": \\\"00:51:17\\\",\\n        \\\"subsections\\\": [\\n            {\\n                \\\"title\\\": \\\"Formatting output as text and object array\\\",\\n                \\\"start_time\\\": \\\"00:51:27\\\",\\n                \\\"subsections\\\": []\\n            },\\n            {\\n                \\\"title\\\": \\\"Printing length from object list\\\",\\n                \\\"start_time\\\": \\\"00:51:38\\\",\\n                \\\"subsections\\\": []\\n            },\\n            {\\n                \\\"title\\\": \\\"Input and output both count as two entries\\\",\\n                \\\"start_time\\\": \\\"00:51:58\\\",\\n                \\\"subsections\\\": []\\n            }\\n        ]\\n    },\\n    {\\n        \\\"title\\\": \\\"Tools versus Tools New formats\\\",\\n        \\\"start_time\\\": \\\"00:52:25\\\",\\n        \\\"subsections\\\": [\\n            {\\n                \\\"title\\\": \\\"New tools column in formatted data\\\",\\n                \\\"start_time\\\": \\\"00:52:32\\\",\\n                \\\"subsections\\\": []\\n            },\\n            {\\n                \\\"title\\\": \\\"Tools format for models without tool tokens\\\",\\n                \\\"start_time\\\": \\\"00:52:47\\\",\\n                \\\"subsections\\\": []\\n            },\\n            {\\n                \\\"title\\\": \\\"Tools New supports tool selection in message array\\\",\\n                \\\"start_time\\\": \\\"00:53:15\\\",\\n                \\\"subsections\\\": []\\n            },\\n            {\\n                \\\"title\\\": \\\"Use eval to convert string to objects\\\",\\n                \\\"start_time\\\": \\\"00:53:53\\\",\\n                \\\"subsections\\\": []\\n            },\\n            {\\n                \\\"title\\\": \\\"Dataset supports both object and string formats\\\",\\n                \\\"start_time\\\": \\\"00:54:02\\\",\\n                \\\"subsections\\\": []\\n            },\\n            {\\n                \\\"title\\\": \\\"Eval requirement for fine tuning and tokenization\\\",\\n                \\\"start_time\\\": \\\"00:54:18\\\",\\n                \\\"subsections\\\": []\\n            },\\n            {\\n                \\\"title\\\": \\\"Tools format for non supporting models like Mistral and Llama\\\",\\n                \\\"start_time\\\": \\\"00:54:44\\\",\\n                \\\"subsections\\\": []\\n            },\\n            {\\n                \\\"title\\\": \\\"User perception of format differences\\\",\\n                \\\"start_time\\\": \\\"00:56:00\\\",\\n                \\\"subsections\\\": []\\n            },\\n            {\\n                \\\"title\\\": \\\"Compatibility and benchmark advantages of string format\\\",\\n                \\\"start_time\\\": \\\"00:56:47\\\",\\n                \\\"subsections\\\": []\\n            }\\n        ]\\n    },\\n    {\\n        \\\"title\\\": \\\"Autogen dataset format\\\",\\n        \\\"start_time\\\": \\\"00:57:36\\\",\\n        \\\"subsections\\\": [\\n            {\\n                \\\"title\\\": \\\"Autogen load demonstration\\\",\\n                \\\"start_time\\\": \\\"00:57:43\\\",\\n                \\\"subsections\\\": []\\n            },\\n            {\\n                \\\"title\\\": \\\"Autogen uses object array format\\\",\\n                \\\"start_time\\\": \\\"00:57:56\\\",\\n                \\\"subsections\\\": []\\n            },\\n            {\\n                \\\"title\\\": \\\"Autogen length count matches tools format\\\",\\n                \\\"start_time\\\": \\\"00:58:08\\\",\\n                \\\"subsections\\\": []\\n            }\\n        ]\\n    },\\n    {\\n        \\\"title\\\": \\\"Loading and preparing datasets\\\",\\n        \\\"start_time\\\": \\\"00:58:25\\\",\\n        \\\"subsections\\\": [\\n            {\\n                \\\"title\\\": \\\"Review of loaded datasets\\\",\\n                \\\"start_time\\\": \\\"00:58:44\\\",\\n                \\\"subsections\\\": []\\n            }\\n        ]\\n    },\\n    {\\n        \\\"title\\\": \\\"Tokenizer introduction\\\",\\n        \\\"start_time\\\": \\\"00:58:53\\\",\\n        \\\"subsections\\\": [\\n            {\\n                \\\"title\\\": \\\"Converting data to model tokens\\\",\\n                \\\"start_time\\\": \\\"00:58:59\\\",\\n                \\\"subsections\\\": []\\n            },\\n            {\\n                \\\"title\\\": \\\"Token CSVs for various models\\\",\\n                \\\"start_time\\\": \\\"00:59:16\\\",\\n                \\\"subsections\\\": []\\n            },\\n            {\\n                \\\"title\\\": \\\"Example tokens in GPT2 tokenizer\\\",\\n                \\\"start_time\\\": \\\"00:59:37\\\",\\n                \\\"subsections\\\": []\\n            },\\n            {\\n                \\\"title\\\": \\\"Online tokenization visualization tool\\\",\\n                \\\"start_time\\\": \\\"01:00:04\\\",\\n                \\\"subsections\\\": []\\n            },\\n            {\\n                \\\"title\\\": \\\"Looking up tokens in tokenizer\\\",\\n                \\\"start_time\\\": \\\"01:00:46\\\",\\n                \\\"subsections\\\": []\\n            }\\n        ]\\n    },\\n    {\\n        \\\"title\\\": \\\"AutoTokenizer class usage\\\",\\n        \\\"start_time\\\": \\\"01:02:06\\\",\\n        \\\"subsections\\\": [\\n            {\\n                \\\"title\\\": \\\"Accessing tokenizer code for models\\\",\\n                \\\"start_time\\\": \\\"01:02:14\\\",\\n                \\\"subsections\\\": []\\n            },\\n            {\\n                \\\"title\\\": \\\"Transformers library and AutoTokenizer class\\\",\\n                \\\"start_time\\\": \\\"01:03:15\\\",\\n                \\\"subsections\\\": []\\n            },\\n            {\\n                \\\"title\\\": \\\"Getting correct tokenizer via from_pretrained\\\",\\n                \\\"start_time\\\": \\\"01:03:46\\\",\\n                \\\"subsections\\\": []\\n            },\\n            {\\n                \\\"title\\\": \\\"Printing tokenizer object properties\\\",\\n                \\\"start_time\\\": \\\"01:05:51\\\",\\n                \\\"subsections\\\": []\\n            }\\n        ]\\n    },\\n    {\\n        \\\"title\\\": \\\"Padding and truncation in tokenization\\\",\\n        \\\"start_time\\\": \\\"01:06:30\\\",\\n        \\\"subsections\\\": [\\n            {\\n                \\\"title\\\": \\\"Padding token usage and pad direction\\\",\\n                \\\"start_time\\\": \\\"01:06:35\\\",\\n                \\\"subsections\\\": []\\n            },\\n            {\\n                \\\"title\\\": \\\"Right versus left padding preference\\\",\\n                \\\"start_time\\\": \\\"01:07:17\\\",\\n                \\\"subsections\\\": []\\n            },\\n            {\\n                \\\"title\\\": \\\"Truncation option explained\\\",\\n                \\\"start_time\\\": \\\"01:07:44\\\",\\n                \\\"subsections\\\": []\\n            }\\n        ]\\n    }\\n]\",\"refusal\":null,\"reasoning\":null,\"reasoning_details\":[{\"type\":\"reasoning.encrypted\",\"data\":\"\",\"id\":\"rs_684ae1d5bc3c81909dcb2d1f2ffcbaa4\"}]}}],\"usage\":{\"prompt_tokens\":9054,\"completion_tokens\":5090,\"total_tokens\":14144}}",
  "encoding": "utf-8",
  "chunk_index": 4,
  "outline_path": "/mnt/x/srv/git.romanmatena.cz/24gatel.eu/videooutliner/import/ai_developer_5_c4fcabddfa098551392c1250827e4c02.outline.json"
}