Analyze this portion of a lecture transcript and create a structured outline in JSON format. Return only the json format, nothing else. The json should contain only english language.
Rules:
• Each level (main topics and any nested subsections) may contain **no more than 10 items**.
• If more than 10 items belong at one level, create additional nested levels so every level stays ≤ 10 items.
• For every node include:
  - "title": brief heading  
  - "start_time": "HH:MM:SS" of first mention
  - "subsections": [] (array holding any children; empty if none)
• This is chunk 6 from total 12 of the transcript.

Return ONLY valid JSON with this exact overall shape:

[
    {
        "title": "Main Topic",
        "start_time": "HH:MM:SS",
        "subsections": [
            {
                "title": "Subtopic",
                "start_time": "HH:MM:SS",
                "subsections": []
            }
        ]
    }
]

Transcript:

=================
1308
01:24:41,720 --> 01:24:47,059
Ten Jinja template se dá doplnit nějakým způsobem,

1309
01:24:47,059 --> 01:24:55,020
abychom si tam mohli přidat ty tuuly pro modely, které ty tuuly nativně neumějí.

1310
01:24:55,840 --> 01:24:57,859
Ano, víceméně jo.

1311
01:24:59,940 --> 01:25:02,140
Vy byste správně měli udělat dvě věci.

1312
01:25:02,140 --> 01:25:04,340
Měli byste obohatit ten tokenizer

1313
01:25:04,539 --> 01:25:06,079
o ty tagy vlastně,

1314
01:25:06,100 --> 01:25:06,600
nebo o ty

1315
01:25:07,440 --> 01:25:12,279
tokeny, který mu řeknou, že něco takového je ten tool use

1316
01:25:12,840 --> 01:25:16,899
a zároveň byste měli obohatit tu chat templateu.

1317
01:25:16,920 --> 01:25:21,800
Brte ale v potaz, že vy takovej model byste taky měli natrénovat

1318
01:25:21,920 --> 01:25:25,859
v případě, že by tam ten tool use vůbec ten support nebyl,

1319
01:25:25,859 --> 01:25:31,739
že by ten base model neměl, nebo nebyl v těch datech natrénovanej

1320
01:25:31,739 --> 01:25:32,859
na nějakej tool use.

1321
01:25:33,859 --> 01:25:33,859
Jo?

1322
01:25:34,619 --> 01:25:42,340
Tím pádem, jestli tomu dobře rozumím, tak v podstatě můžeme, jak jsou vlastně několik verzií modelů,

1323
01:25:42,359 --> 01:25:51,859
které přijímají třeba s jako ty tagy s nebo lomeno s na uzdalírání, nebo mají tady v tomto případě mají ten

1324
01:25:51,960 --> 01:25:58,640
instruct a tak dále, tak my můžeme to na to změnit tomu modelu tím jiným řadným pretim taky?

1325
01:25:59,199 --> 01:26:07,420
Můžete mu ty tokeny změnit, ale tím přijdete o to, jak byl natrénovanej.

1326
01:26:07,420 --> 01:26:10,319
Protože byl natrénovanej na těchto tokenech.

1327
01:26:10,600 --> 01:26:16,899
Spíš než byste mu to měnili, tím byste ho rozbili,

1328
01:26:17,220 --> 01:26:19,880
tak spíš mu nějaké tokeny budete přidávat.

1329
01:26:19,880 --> 01:26:28,100
Proto i v tom tokenizéru je ponechané velké místo dalším tokenům, které si tam můžete přidat.

1330
01:26:28,559 --> 01:26:35,380
Jo jasně, chápu, že vlastně on je natrénovanej už na těchto tagách, takže on by s jinýma tagama nevěděl, jak fungovat.

1331
01:26:37,420 --> 01:26:43,399
On by nevěděl, kde je najednou ta instrukce, kde je ten zpráva o toho uživatele atd.

1332
01:26:44,039 --> 01:26:51,619
Takže se vždycky ohybat spíš ty datasety na to trénování, než ohybat...

1333
01:26:51,619 --> 01:26:52,680
Jo.

1334
01:26:52,680 --> 01:26:53,100
Jo.

1335
01:26:53,460 --> 01:26:55,600
Rozhodně ohybat datasety ne, spíš tému dal.

1336
01:26:55,659 --> 01:26:58,979
Já vám tohle ukazuji spíš, abyste chápali, jak to funguje vevnitř,

1337
01:26:59,880 --> 01:27:03,520
než že byste byli nucený vlastně tyhle ty věci jakoby měnit.

1338
01:27:03,899 --> 01:27:18,699
Jo, ale třeba pro ty toolingy, třeba já jsem si hrál s Olamou a právě že tam natým mě nepodporuje ty toolingy, takže teoreticky kdybych se chtěl, tak si můžu upravit Jinja template a můžu v podstatě naučit ten model užívat ty tooli přes ten Jinja template.

1339
01:27:19,779 --> 01:27:25,559
Jo, pokud bude mít v tom tokenizeru vlastně ty tokeny pro ten tool use, tak jo.

1340
01:27:26,199 --> 01:27:31,140
A to si budeme nějak ukazovat běžně nebo moc ne?

1341
01:27:31,199 --> 01:27:37,920
Jako není tam podle mě u toho fine turningu nemáme.

1342
01:27:38,640 --> 01:27:46,220
Jako budeme si ukazovat jak ho naučit tool use a budeme si ukazovat teda jako v oba dva ty způsoby.

1343
01:27:46,220 --> 01:27:49,600
Jako jak mu posoupnout tu novou Jinju třeba, než říkáme že jsme si naučili.

1344
01:27:49,600 --> 01:27:52,600
Jo to vám ukážu, ano to vám ukážu.

1345
01:27:53,119 --> 01:27:53,119
Super, díky.

1346
01:27:54,940 --> 01:27:58,180
Tak a teď, když jsme to dostali do tohoto formátu,

1347
01:27:58,220 --> 01:28:01,340
tak samozřejmě já můžu tu Apply Chat Template zavolat znova,

1348
01:28:01,340 --> 01:28:04,420
akorát teď mu teda jediné změna, která tam je,

1349
01:28:04,699 --> 01:28:08,779
je, že mu řeknu, že tady u toho, když jsem mu řekl tokenize false,

1350
01:28:08,899 --> 01:28:11,020
tak mi vrátil vlastně ten string,

1351
01:28:11,180 --> 01:28:14,559
takže tím jsem byl schopnej dostat ten string

1352
01:28:15,199 --> 01:28:17,140
a když jsem mu dal tokenize true,

1353
01:28:17,199 --> 01:28:20,899
tak vlastně on mi vrátil už ty IDčka těch tokenů.

1354
01:28:21,119 --> 01:28:25,619
Takže tady to S je najednou ta jednička,

1355
01:28:25,619 --> 01:28:28,699
ta instrukce, tady je ta trojka vlastně,

1356
01:28:28,859 --> 01:28:34,340
a teď už jedete podle těch tokenů, který on si tady ty věci vzal.

1357
01:28:34,399 --> 01:28:38,059
Tady pak máte konec té instrukce, to je tady ta čtyrka,

1358
01:28:38,260 --> 01:28:46,199
zase ty ID byste zjistili buď z toho listu ohromného,

1359
01:28:46,920 --> 01:28:49,260
tak tady pak máte čtyrka,

1360
01:28:49,319 --> 01:28:51,920
je prostě tenhle ten uzavírací,

1361
01:28:51,920 --> 01:28:54,659
tak trojka je tenhle, jednička, trojka, blablabla.

1362
01:28:55,180 --> 01:28:56,979
Tak to je jenom, abyste chápali,

1363
01:28:57,119 --> 01:29:01,220
že vy jste schopní i sami vlastně de facto si přeložit ten text,

1364
01:29:01,380 --> 01:29:03,779
kdybyste měli se nudili.

1365
01:29:04,359 --> 01:29:06,239
Tak není to žádná magie.

1366
01:29:06,440 --> 01:29:08,720
A Lukáš je vynechal se tam tituly úmyslně,

1367
01:29:08,720 --> 01:29:10,000
nebo je to jenom chyba?

1368
01:29:10,539 --> 01:29:12,720
No to se zeptám.

1369
01:29:13,059 --> 01:29:14,140
No, tools, tools.

1370
01:29:15,319 --> 01:29:19,819
Ještě jednou. Tadyhle v tom chat template.

1371
01:29:19,819 --> 01:29:22,359
Jo, no vidíte, to jsem tady vynechal teda.

1372
01:29:24,319 --> 01:29:27,199
Tak, zkus se zavolat znovu, až se nic nerozbilo.

1373
01:29:30,260 --> 01:29:36,880
Tak, ano. Ano, změnilo se to, ne? Je to další.

1374
01:29:37,699 --> 01:29:38,640
Je to další.

1375
01:29:38,840 --> 01:29:40,479
Podle mě kratší.

1376
01:29:43,840 --> 01:29:45,440
Tak já scrolluju.

1377
01:29:47,460 --> 01:29:50,600
1, 2, 3, 4, 4 a něco.

1378
01:29:52,559 --> 01:29:53,800
No, tak správně.

1379
01:29:53,859 --> 01:29:56,739
Musí ten tool přidat do toho

1380
01:29:57,579 --> 01:29:58,520
pole těch

1381
01:29:58,840 --> 01:29:59,479
tokenů.

1382
01:30:00,039 --> 01:30:03,760
Ono tam musí přidat, nebo teď jsem neslyšel otázku.

1383
01:30:03,760 --> 01:30:06,159
Jo, ono tam musí přidat, takže ty tuly tam přibyly teď.

1384
01:30:06,399 --> 01:30:11,640
Ano, ano, přibyly. Je to vidět. Byla to chyba, že tam ten tools nebyl, protože

1385
01:30:11,760 --> 01:30:18,140
zase to koroluje s tím, jak tomu teďka začíná to rozumět, jo, protože když jsem mu tam ty tuly nedal,

1386
01:30:18,460 --> 01:30:24,779
tak on je vlastně, v té chat template tam nebyl žádný objekt s tím toolem, to znamená, že ten výslednej

1387
01:30:25,100 --> 01:30:33,060
Vlastně to je jako kdybych ji nedal sem, že jo? Tak on mi je prostě nedá, on je tady bude ignorovat, tyhle ty sekce tam nebudou prostě.

1388
01:30:33,060 --> 01:30:40,859
Protože ta chat templata, ta Jinja templata je tam nedá nikam, prostě je bude ignorovat. Nemá v té templati nadefinováno, co s ním má dělat.

1389
01:30:41,579 --> 01:30:44,199
Takže správně jste mě opravili, tadyhle má být tools.

1390
01:30:44,640 --> 01:30:46,699
A potom zase zpátky,

1391
01:30:46,779 --> 01:30:50,239
jak byste něco takového dostali z toho ten text zpátky,

1392
01:30:50,239 --> 01:30:52,000
z těch tokenů.

1393
01:30:52,020 --> 01:30:53,659
To znamená, že byste tady zavolali decode

1394
01:30:54,079 --> 01:30:56,760
a on by vám vrátil zase ten string.

1395
01:30:56,840 --> 01:31:00,340
Takže teď vidíte, že tady zase z toho mám správně ty tůly.

1396
01:31:00,600 --> 01:31:02,319
Teď schválně jenom zaskroluji nahoru

1397
01:31:02,500 --> 01:31:05,640
a to znamená, že když jsem decodoval předtím ten string,

1398
01:31:05,640 --> 01:31:07,159
tak tam ty tůly nebyly.

1399
01:31:10,779 --> 01:31:11,319
Byly.

1400
01:31:13,119 --> 01:31:16,060
Ale nedefinované.

1401
01:31:17,380 --> 01:31:18,600
Nedefinovaný.

1402
01:31:18,600 --> 01:31:23,899
Jenom hrám si toho chatu, co si vracel, nebo co vracel ten model.

1403
01:31:23,899 --> 01:31:32,439
Tool cost, tool result tam by, tohle tam bylo, jo, available tools, ano.

1404
01:31:32,439 --> 01:31:34,500
To je to, co tam chybělo, ano.

1405
01:31:34,840 --> 01:31:37,340
Ty jsi mu to jako by nedodal ty, které máš na dispozici.

1406
01:31:37,340 --> 01:31:43,239
Jo, jo, jo, který má k dispozici, jasně. Tak de facto, jasně, jasně.

1407
01:31:44,680 --> 01:31:48,300
Teď přemýšlím, jestli v tomhle tom případě zrovna by to byl problém.

1408
01:31:49,340 --> 01:31:53,079
Asi při této konverzaci úplně ne,

1409
01:31:53,180 --> 01:31:54,840
pokud bych původně ji nechtěl.

1410
01:31:54,840 --> 01:31:57,060
Vlastně byl, protože v této konverzaci

1411
01:31:57,060 --> 01:32:00,739
on by si měl tady správně zase vybrat ten tool.

1412
01:32:00,779 --> 01:32:03,720
A když já bych mu nedal vlastně tam v tom stringu

1413
01:32:04,140 --> 01:32:06,939
available tools, tak on by vlastně fabuloval

1414
01:32:08,520 --> 01:32:09,899
nebo by halucinoval.

1415
01:32:10,039 --> 01:32:12,420
Nevrátil by mi, hele, použij znova

1416
01:32:12,579 --> 01:32:14,140
tenhle tool get current weather,

1417
01:32:14,140 --> 01:32:15,979
protože by tam neměl ty available tools.

1418
01:32:16,020 --> 01:32:17,560
Takže jo, správně jste mě opravili.

1419
01:32:18,100 --> 01:32:21,359
To jsem rád, že tomu takhle rozumíte už.

1420
01:32:21,840 --> 01:32:25,979
Tak, dobře, to je token a jezry.

1421
01:32:26,039 --> 01:32:29,119
Teď se pojďme podívat o ty modely, což je to důležité.

1422
01:32:29,199 --> 01:32:31,159
Takže zase, podívejte se na...

1423
01:32:31,260 --> 01:32:33,520
Já si to věřím, ale je to tak,

1424
01:32:33,520 --> 01:32:37,199
ten počet těch slovníků, těch tokenů ve slovníku

1425
01:32:37,279 --> 01:32:40,899
je počet vstupních neuronů v neuronové sítě toho LLMka, proto to sedí.

1426
01:32:41,779 --> 01:32:43,000
Oni to tady designují, jo?

1427
01:32:43,000 --> 01:32:48,420
Jo, ano, to je tady to číslo, to je to, co jsem říkal, že jo?

1428
01:32:48,560 --> 01:32:49,159
No.

1429
01:32:49,300 --> 01:32:50,920
Tadyhle.

1430
01:32:51,100 --> 01:32:55,800
Těch 32 tisíc, co jsi tam měl, tak tolik oni mají vstupních neuronů té sítě toho.

1431
01:32:55,800 --> 01:33:02,880
No ty první vlastně, nebo ne takhle, první vrstva má 4096 neuronů, ne?

1432
01:33:02,880 --> 01:33:08,840
Ne, těch 32 tisíc tam podle toho to vypadá, že přesně tolik, kodik je ve slovníku tokenů,

1433
01:33:09,119 --> 01:33:10,979
tolik má vstupní vrstva neuronů.

1434
01:33:11,140 --> 01:33:14,699
Ano, pokud bereme jako první vrstvu tu embedding vrstvu,

1435
01:33:14,699 --> 01:33:19,779
která to vlastně převádí na ty vektory, tak ano, v tom případě ano.

1436
01:33:19,840 --> 01:33:22,760
Proto se nedá překročit, protože už to pak nemá kam dát.

1437
01:33:22,859 --> 01:33:27,479
No, ale teď proč to tak je? Proč vlastně ta velikost,

1438
01:33:28,260 --> 01:33:30,880
proč ty dvě čísla jsou vždycky stejný?

1439
01:33:30,920 --> 01:33:32,720
Na to teda popravdě neznám odpověď.

1440
01:33:33,060 --> 01:33:38,020
Můžu se zeptat? My jsme si říkali, že každá ta...

1441
01:33:39,159 --> 01:33:42,859
každá ta vrstva,

1442
01:33:42,859 --> 01:33:47,840
že jakoby značí jednu feature, že to může být třeba jak daleko je to vodní,

1443
01:33:47,840 --> 01:33:53,659
třeba cena nemovitosti je závislá na toho, jak daleko je to od města,

1444
01:33:53,819 --> 01:33:58,100
v jaké části je to města, a to byly, tam jsme měli nějakých pět feature.

1445
01:33:58,359 --> 01:34:05,260
Takže v tomhle případě ten jejich model nějakým způsobem pracuje s 32 000 feature,

1446
01:34:06,659 --> 01:34:08,800
To je počet neuronů

1447
01:34:08,800 --> 01:34:10,640
v tom atomu. A teďka on každej

1448
01:34:10,800 --> 01:34:12,159
ten neuron si vlastně

1449
01:34:12,260 --> 01:34:15,720
veme nějakou část

1450
01:34:15,859 --> 01:34:16,800
z toho vstupu

1451
01:34:17,180 --> 01:34:19,840
Ano, já jsem myslel na tu input layer asi.

1452
01:34:20,000 --> 01:34:23,020
Tak ta input layer je těch 32 700?

1453
01:34:23,659 --> 01:34:25,800
Jo, ale to je ten embedding.

1454
01:34:25,939 --> 01:34:30,619
To znamená, že ten embedding má 32 000 vstupů, to jsou ty tokeny.

1455
01:34:30,659 --> 01:34:32,579
To je tadyto area, feed, bedroom.

1456
01:34:32,739 --> 01:34:36,119
Takže každý ten token je tady jeden ten vstup.

1457
01:34:36,260 --> 01:34:40,060
Nebo políčko, do kterého vy můžete dát jeden ten token.

1458
01:34:40,460 --> 01:34:45,159
A potom to jde a konvertuje se to na těch 4096,

1459
01:34:45,199 --> 01:34:50,319
to znamená, že tadyhle, když zase loguju tu architekturu toho modelu,

1460
01:34:51,420 --> 01:34:57,899
Tady, tak máte ten model, máte tu Embed Tokens, to je ten embedding, to má těch 39 000, to je ten vstup.

1461
01:34:58,079 --> 01:35:01,859
A převede se to na 4096. A teď každá ta vrstva pak,

1462
01:35:02,239 --> 01:35:06,279
v tom dekodéru, protože tadyhle to je o dekodéru,

1463
01:35:06,399 --> 01:35:11,220
tak ta má zase IN 4096 a OUT 4096.

1464
01:35:11,319 --> 01:35:17,659
Když já to připodobním tomu, co jsme si ukazovali v těch jednodušších vlastně neuronových sítích,

1465
01:35:17,720 --> 01:35:20,039
tady odeuřu nějaký od toho Perceptrona,

1466
01:35:21,800 --> 01:35:23,819
Tak tady.

1467
01:35:24,539 --> 01:35:26,460
To znamená, že tady je ten perceptron,

1468
01:35:26,460 --> 01:35:27,739
to znamená, že tady mám tu

1469
01:35:28,399 --> 01:35:32,300
vstupní ten input size, tak to je tohleto.

1470
01:35:32,300 --> 01:35:34,899
To je vlastně tady. A pak mám tu hidden size,

1471
01:35:34,960 --> 01:35:37,600
kde vlastně ty ostatní vrstvy

1472
01:35:37,659 --> 01:35:41,260
mají vlastně ten další počet.

1473
01:35:41,300 --> 01:35:43,840
Takže pro nás to bylo něco jako

1474
01:35:43,899 --> 01:35:46,979
input size byly 4, v případě to bylo open, high, low, close.

1475
01:35:47,079 --> 01:35:49,199
Pro nás to jsou teď tokeny, takže to je ten

1476
01:35:49,260 --> 01:35:52,680
32 tisíc. A teď vám hidden size to už vám určuje

1477
01:35:52,739 --> 01:35:55,640
kolik těch neuronů máte v těch skrytejch vrstvách.

1478
01:35:55,939 --> 01:35:57,560
A to je v tom případě

1479
01:35:57,560 --> 01:35:59,560
těch 4096.

1480
01:35:59,619 --> 01:36:00,520
Tady vidíte, že už

1481
01:36:01,140 --> 01:36:04,119
1024 a 4096.

1482
01:36:04,859 --> 01:36:06,159
Ale takhle bych tomu rozuměl.

1483
01:36:06,800 --> 01:36:09,039
Měl bych jenom takovou,

1484
01:36:09,039 --> 01:36:10,680
když jsme u těch embedingu,

1485
01:36:10,960 --> 01:36:12,399
tak ten embeding, který si necháme

1486
01:36:12,500 --> 01:36:13,779
vytvořit z textu, není vlastně

1487
01:36:14,399 --> 01:36:16,920
jenom ten tokenová reprezentace

1488
01:36:16,920 --> 01:36:18,880
toho textu, ne? Ne, to je vektorová

1489
01:36:18,939 --> 01:36:20,680
reprezentace toho textu. Jo, to je pak ten

1490
01:36:20,840 --> 01:36:22,880
vektor ke 4096.

1491
01:36:23,020 --> 01:36:24,699
Ano, 4096

1492
01:36:25,039 --> 01:36:26,319
dimensionální vektor.

1493
01:36:26,899 --> 01:36:28,739
I to je ten důvod, proč

1494
01:36:28,899 --> 01:36:30,819
on vlastně mluví všema těma jazykama.

1495
01:36:31,020 --> 01:36:32,899
Protože on vlastně...

1496
01:36:32,939 --> 01:36:38,199
ono vlastně nepoužívá žádný jazyk, protože to je prostě pro něj ten string,

1497
01:36:38,239 --> 01:36:41,960
ten se převede na tokeny a ten se převede na tyhle ty vektory.

1498
01:36:41,960 --> 01:36:46,960
A co mně nebylo jasný je to, že když teda já napíšu tu větu v češtině,

1499
01:36:47,140 --> 01:36:51,199
tak on to vlastně převede na jiný tokeny, než když ji napíšu v angličtině.

1500
01:36:51,199 --> 01:36:56,039
Takže ty čísla, které jdou vlastně jakoby dovnitř, by měly být jiný.

1501
01:36:56,340 --> 01:37:00,100
A co jsem zjistil, tak vlastně ten vektor,

1502
01:37:00,659 --> 01:37:03,140
když nám píšu v češtině a když nám píšu v angličtině,

1503
01:37:03,140 --> 01:37:05,180
tak sice tenhle ten

1504
01:37:05,520 --> 01:37:07,340
čísla bou jiný,

1505
01:37:07,340 --> 01:37:08,840
ale ten vektor, který mi to vlastně

1506
01:37:08,939 --> 01:37:10,600
dá, bude

1507
01:37:11,300 --> 01:37:12,800
velmi blízko sobě.

1508
01:37:13,060 --> 01:37:15,000
To znamená, že když se zeptám na tu samou věc

1509
01:37:15,000 --> 01:37:16,500
v angličtině a na tu samou věc

1510
01:37:16,500 --> 01:37:18,840
v češtině, tak oni ty vektory

1511
01:37:19,220 --> 01:37:19,779
budou u sebe.

1512
01:37:19,779 --> 01:37:22,920
To znamená, že je jedno, jakým jazykem

1513
01:37:23,140 --> 01:37:24,279
se ptáte, pokud on

1514
01:37:24,560 --> 01:37:27,739
rozumí tomu jazyku,

1515
01:37:27,779 --> 01:37:30,439
což zase díky tomu,

1516
01:37:30,840 --> 01:37:32,079
že byl naučený na té angličtině,

1517
01:37:32,100 --> 01:37:35,659
tak ta skladba té věty je dost podobná,

1518
01:37:35,680 --> 01:37:37,020
má podnět, přísudek,

1519
01:37:37,239 --> 01:37:39,720
takže tam už mu pak stačí dát...

1520
01:37:40,319 --> 01:37:50,020
drobnou, drobný data v tom těch ostatních jazycích a on už si vlastně ty základy, ty spojitosti mezi těma jazykama už jako chápe.

1521
01:37:50,020 --> 01:37:58,659
To je i důvod, proč oni ho učili v indický jazyky, nějaký ty základní hindi a tak dále.

1522
01:37:59,039 --> 01:38:00,899
a on najednou byl schopný si povědat

1523
01:38:01,039 --> 01:38:03,020
i nějakým prostě neznámým dialektem

1524
01:38:03,180 --> 01:38:04,119
v Indii, kterým

1525
01:38:04,180 --> 01:38:06,579
on vlastně jako by neznal, tak když se o tím

1526
01:38:06,699 --> 01:38:08,739
dialektem začali ptát, tak on i byl

1527
01:38:08,819 --> 01:38:10,659
schopný tím dialektem jako odpovídat,

1528
01:38:10,779 --> 01:38:11,699
což prostě bylo

1529
01:38:12,500 --> 01:38:14,859
překvapující pro ně a vysvětlení

1530
01:38:14,979 --> 01:38:16,539
by mělo být tohleto.

1531
01:38:18,920 --> 01:38:23,600
Tak já jsem tady

1532
01:38:23,600 --> 01:38:25,260
ještě...

1533
01:38:25,159 --> 01:38:41,119
Takže teď chápeme, jak ten tokenizer funguje, jak z toho dostaneme ty tokeny. Je to prostě jenom takovej překladač, takovej slovník, který nám pomáhá.

1534
01:38:41,159 --> 01:38:44,039
ten text v předefinovaném formátu,

1535
01:38:44,039 --> 01:38:47,619
jakoby objektovém formátu převést na ten stringovou reprezentaci

1536
01:38:47,779 --> 01:38:49,640
a pak následně na ty tokeny.

1537
01:38:49,699 --> 01:38:51,559
A teď se teda pojďme podívat na ty modely,

1538
01:38:51,579 --> 01:38:55,359
což je to důležité, k čemu se potřebujeme dostat.

1539
01:38:56,180 --> 01:38:58,760
Já teda využiju toho, že už jsme nakousli

1540
01:38:59,239 --> 01:39:03,300
tadyhle ten tokenizer, vy už máte v hlavě naloudovaný

1541
01:39:03,440 --> 01:39:09,500
vlastně to, jak se to překládá, tak dojedu, jak se lokálně

1542
01:39:11,000 --> 01:39:16,960
pracuje s těma modelama a pak si na konci ukážeme, jak se to dá zavolat přes API, což je taková ta jednodušší forma.

1543
01:39:16,960 --> 01:39:20,100
Takže teď si projedeme tu těžší formu.

1544
01:39:20,800 --> 01:39:26,699
Tak já teď přemýšlím, jestli odevřu teda ten Jupyter, anebo jo asi jo.

1545
01:39:27,520 --> 01:39:39,039
Tak chci vám ještě ukázat, jak ten Jupyter si vlastně pustit v rámci toho UV, takže je tady k tomu Readme, takže to by vám mělo pomoct si to pustit, zase pustíte tadyhle ty dva komandy.

1546
01:39:39,739 --> 01:39:46,399
což si tady UV nasíduje něco a vlastně si pustíte ten Jupiter.

1547
01:39:49,199 --> 01:39:52,880
Aha, dobře.

1548
01:39:52,880 --> 01:39:54,500
Replemently.

1549
01:39:55,720 --> 01:39:58,239
To já teda překomitnu, ať to tam máte.

1550
01:39:58,380 --> 01:40:00,520
To znamená UV init.

1551
01:40:04,819 --> 01:40:06,479
Jo, ale to je dobře tak jo.

1552
01:40:06,579 --> 01:40:08,840
Tak ještě rename.

1553
01:40:10,739 --> 01:40:13,199
UV init.

1554
01:40:14,720 --> 01:40:16,039
UV add.

1555
01:40:18,720 --> 01:40:20,880
Transformers.

1556
01:40:21,479 --> 01:40:24,920
Add, Datasets,

1557
01:40:26,039 --> 01:40:28,739
já myslím, že tam toho tolik nepotřebuju, ale

1558
01:40:29,520 --> 01:40:31,100
Skript,

1559
01:40:33,640 --> 01:40:36,000
dobře, já to tam teda přidám.

1560
01:40:36,260 --> 01:40:41,300
Tracer, Datasets, Torch, Bits and Bytes,

1561
01:40:41,500 --> 01:40:44,340
já myslím, že to nepotřebuju, ale

1562
01:40:45,979 --> 01:40:50,119
já myslím, že mi stačí tohle, a teď jenom stačí pustit.
=================


Important: Translate all titles to English.
Important: No explanation, no comments, only valid JSON as output.